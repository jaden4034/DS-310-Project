{
	"name": "policy_dataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "cosmos_policy_parquet_copy1",
						"type": "DatasetReference"
					},
					"name": "policydatasource"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "policy_parquet",
						"type": "DatasetReference"
					},
					"name": "policysink"
				}
			],
			"transformations": [
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          CountryName as string,",
				"          CountryCode as string,",
				"          RegionName as string,",
				"          RegionCode as string,",
				"          Jurisdiction as string,",
				"          Date as timestamp,",
				"          C1_SchoolClosing as double,",
				"          C1_Flag as boolean,",
				"          C2_WorkplaceClosing as double,",
				"          C2_Flag as boolean,",
				"          C3_CancelPublicEvents as double,",
				"          C3_Flag as boolean,",
				"          C4_RestrictionsOnGatherings as double,",
				"          C4_Flag as boolean,",
				"          C5_ClosePublicTransport as double,",
				"          C5_Flag as boolean,",
				"          C6_StayAtHomeRequirements as double,",
				"          C6_Flag as boolean,",
				"          C7_RestrictionsOnInternalMovement as double,",
				"          C7_Flag as boolean,",
				"          C8_InternationalTravelControls as double,",
				"          E1_IncomeSupport as double,",
				"          E1_Flag as boolean,",
				"          E2_DebtContractRelief as double,",
				"          E3_FiscalMeasures as double,",
				"          E4_InternationalSupport as double,",
				"          H1_PublicInformationCampaigns as double,",
				"          H1_Flag as boolean,",
				"          H2_TestingPolicy as double,",
				"          H3_ContactTracing as double,",
				"          H4_EmergencyInvestmentInHealthcare as double,",
				"          H5_InvestmentInVaccines as double,",
				"          H6_FacialCoverings as double,",
				"          H6_Flag as boolean,",
				"          H7_VaccinationPolicy as double,",
				"          H7_Flag as boolean,",
				"          H8_ProtectionOfElderlyPeople as double,",
				"          H8_Flag as boolean,",
				"          M1_Wildcard as double,",
				"          StringencyIndex as double,",
				"          StringencyIndexForDisplay as double,",
				"          StringencyLegacyIndex as double,",
				"          StringencyLegacyIndexForDisplay as double,",
				"          GovernmentResponseIndex as double,",
				"          GovernmentResponseIndexForDisplay as double,",
				"          ContainmentHealthIndex as double,",
				"          ContainmentHealthIndexForDisplay as double,",
				"          EconomicSupportIndex as double,",
				"          EconomicSupportIndexForDisplay as double,",
				"          id as string,",
				"          rid as string,",
				"          self as string,",
				"          etag as string,",
				"          attachments as string,",
				"          ts as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> policydatasource",
				"policydatasource select(mapColumn(",
				"          CountryCode,",
				"          Jurisdiction,",
				"          Date,",
				"          C1_SchoolClosing,",
				"          C1_Flag,",
				"          C2_WorkplaceClosing,",
				"          C2_Flag,",
				"          C3_CancelPublicEvents,",
				"          C3_Flag,",
				"          C4_RestrictionsOnGatherings,",
				"          C4_Flag,",
				"          C5_ClosePublicTransport,",
				"          C5_Flag,",
				"          C6_StayAtHomeRequirements,",
				"          C6_Flag,",
				"          C7_RestrictionsOnInternalMovement,",
				"          C7_Flag,",
				"          C8_InternationalTravelControls,",
				"          E1_IncomeSupport,",
				"          E1_Flag,",
				"          E2_DebtContractRelief,",
				"          E3_FiscalMeasures,",
				"          E4_InternationalSupport,",
				"          H1_PublicInformationCampaigns,",
				"          H1_Flag,",
				"          H2_TestingPolicy,",
				"          H3_ContactTracing,",
				"          H4_EmergencyInvestmentInHealthcare,",
				"          H5_InvestmentInVaccines,",
				"          H6_FacialCoverings,",
				"          H6_Flag,",
				"          H7_VaccinationPolicy,",
				"          H7_Flag,",
				"          H8_ProtectionOfElderlyPeople,",
				"          H8_Flag,",
				"          M1_Wildcard,",
				"          StringencyIndex,",
				"          StringencyIndexForDisplay,",
				"          StringencyLegacyIndex,",
				"          StringencyLegacyIndexForDisplay,",
				"          GovernmentResponseIndex,",
				"          GovernmentResponseIndexForDisplay,",
				"          ContainmentHealthIndex,",
				"          ContainmentHealthIndexForDisplay,",
				"          EconomicSupportIndex,",
				"          EconomicSupportIndexForDisplay,",
				"          id,",
				"          rid,",
				"          self,",
				"          etag,",
				"          attachments,",
				"          ts",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     partitionFileNames:['Policies.parquet'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> policysink"
			]
		}
	}
}