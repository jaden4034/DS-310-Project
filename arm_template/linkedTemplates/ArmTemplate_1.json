{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name",
            "defaultValue": "team06datafactory"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/sqldb_country_parquet_copy1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Country.parquet",
                        "fileSystem": "azuresqldbsource"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "Country",
                        "type": "UTF8"
                    },
                    {
                        "name": "CountryCode",
                        "type": "UTF8"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/cosmos_policy_parquet_copy1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "data_34aa72af-17a3-407d-b97e-b72985627d0d_a12c4efd-3e6f-4a61-9b53-ed33baa8b6c8.parquet",
                        "fileSystem": "azurecdbsource"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "CountryName",
                        "type": "UTF8"
                    },
                    {
                        "name": "CountryCode",
                        "type": "UTF8"
                    },
                    {
                        "name": "RegionName",
                        "type": "UTF8"
                    },
                    {
                        "name": "RegionCode",
                        "type": "UTF8"
                    },
                    {
                        "name": "Jurisdiction",
                        "type": "UTF8"
                    },
                    {
                        "name": "Date",
                        "type": "INT96"
                    },
                    {
                        "name": "C1_SchoolClosing",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "C1_Flag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "C2_WorkplaceClosing",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "C2_Flag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "C3_CancelPublicEvents",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "C3_Flag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "C4_RestrictionsOnGatherings",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "C4_Flag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "C5_ClosePublicTransport",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "C5_Flag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "C6_StayAtHomeRequirements",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "C6_Flag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "C7_RestrictionsOnInternalMovement",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "C7_Flag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "C8_InternationalTravelControls",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "E1_IncomeSupport",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "E1_Flag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "E2_DebtContractRelief",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "E3_FiscalMeasures",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "E4_InternationalSupport",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "H1_PublicInformationCampaigns",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "H1_Flag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "H2_TestingPolicy",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "H3_ContactTracing",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "H4_EmergencyInvestmentInHealthcare",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "H5_InvestmentInVaccines",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "H6_FacialCoverings",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "H6_Flag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "H7_VaccinationPolicy",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "H7_Flag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "H8_ProtectionOfElderlyPeople",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "H8_Flag",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "M1_Wildcard",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "StringencyIndex",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "StringencyIndexForDisplay",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "StringencyLegacyIndex",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "StringencyLegacyIndexForDisplay",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "GovernmentResponseIndex",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "GovernmentResponseIndexForDisplay",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "ContainmentHealthIndex",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "ContainmentHealthIndexForDisplay",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "EconomicSupportIndex",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "EconomicSupportIndexForDisplay",
                        "type": "DOUBLE"
                    },
                    {
                        "name": "id",
                        "type": "UTF8"
                    },
                    {
                        "name": "rid",
                        "type": "UTF8"
                    },
                    {
                        "name": "self",
                        "type": "UTF8"
                    },
                    {
                        "name": "etag",
                        "type": "UTF8"
                    },
                    {
                        "name": "attachments",
                        "type": "UTF8"
                    },
                    {
                        "name": "ts",
                        "type": "UTF8"
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_metrics_parquet_copy1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Covid19_Metrics.parquet",
                        "fileSystem": "azuredfsource"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "ID",
                        "type": "INT32"
                    },
                    {
                        "name": "Updated",
                        "type": "DATE"
                    },
                    {
                        "name": "Confirmed",
                        "type": "INT32"
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths",
                        "type": "INT32"
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered",
                        "type": "INT32"
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "INT32"
                    },
                    {
                        "name": "Latitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "DECIMAL",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "UTF8"
                    },
                    {
                        "name": "ISO3",
                        "type": "UTF8"
                    },
                    {
                        "name": "Country_Region",
                        "type": "UTF8"
                    },
                    {
                        "name": "load_time",
                        "type": "INT96"
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/sqldb_dates_parquet_copy1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureDataLakeStorage1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "Parquet",
                "typeProperties": {
                    "location": {
                        "type": "AzureBlobFSLocation",
                        "fileName": "dbo.Dates.parquet",
                        "fileSystem": "azuresqldbsource"
                    },
                    "compressionCodec": "snappy"
                },
                "schema": [
                    {
                        "name": "DateKey",
                        "type": "INT32"
                    },
                    {
                        "name": "FullDate",
                        "type": "DATE"
                    },
                    {
                        "name": "isWeekDay",
                        "type": "BOOLEAN"
                    },
                    {
                        "name": "DayOfWeek",
                        "type": "INT32"
                    },
                    {
                        "name": "DayOfMonth",
                        "type": "INT32"
                    },
                    {
                        "name": "DayOfQuarter",
                        "type": "INT32"
                    },
                    {
                        "name": "DayOfYear",
                        "type": "INT32"
                    },
                    {
                        "name": "DayName",
                        "type": "UTF8"
                    },
                    {
                        "name": "WeekOfYear",
                        "type": "INT32"
                    },
                    {
                        "name": "WeekName",
                        "type": "UTF8"
                    },
                    {
                        "name": "MonthOfYear",
                        "type": "INT32"
                    },
                    {
                        "name": "MonthName",
                        "type": "UTF8"
                    },
                    {
                        "name": "CalendarQuarter",
                        "type": "INT32"
                    },
                    {
                        "name": "CalendarQuarterName",
                        "type": "UTF8"
                    },
                    {
                        "name": "CalendarYear",
                        "type": "INT32"
                    },
                    {
                        "name": "FiscalMonth",
                        "type": "INT32"
                    },
                    {
                        "name": "FiscalMonthName",
                        "type": "UTF8"
                    },
                    {
                        "name": "FiscalQuarter",
                        "type": "INT32"
                    },
                    {
                        "name": "FiscalQuarterName",
                        "type": "UTF8"
                    },
                    {
                        "name": "FiscalYear",
                        "type": "INT32"
                    }
                ]
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/CosmosDbNoSqlContainer1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "CosmosDbNoSql1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "CosmosDbSqlApiCollection",
                "schema": {
                    "type": "object",
                    "properties": {
                        "CountryName": {
                            "type": "string"
                        },
                        "CountryCode": {
                            "type": "string"
                        },
                        "RegionName": {
                            "type": "null"
                        },
                        "RegionCode": {
                            "type": "null"
                        },
                        "Jurisdiction": {
                            "type": "string"
                        },
                        "Date": {
                            "type": "string"
                        },
                        "C1_School closing": {
                            "type": "integer"
                        },
                        "C1_Flag": {
                            "type": "integer"
                        },
                        "C2_Workplace closing": {
                            "type": "integer"
                        },
                        "C2_Flag": {
                            "type": "integer"
                        },
                        "C3_Cancel public events": {
                            "type": "integer"
                        },
                        "C3_Flag": {
                            "type": "integer"
                        },
                        "C4_Restrictions on gatherings": {
                            "type": "integer"
                        },
                        "C4_Flag": {
                            "type": "integer"
                        },
                        "C5_Close public transport": {
                            "type": "integer"
                        },
                        "C5_Flag": {
                            "type": "integer"
                        },
                        "C6_Stay at home requirements": {
                            "type": "integer"
                        },
                        "C6_Flag": {
                            "type": "integer"
                        },
                        "C7_Restrictions on internal movement": {
                            "type": "integer"
                        },
                        "C7_Flag": {
                            "type": "integer"
                        },
                        "C8_International travel controls": {
                            "type": "integer"
                        },
                        "E1_Income support": {
                            "type": "integer"
                        },
                        "E1_Flag": {
                            "type": "integer"
                        },
                        "E2_Debt contract relief": {
                            "type": "integer"
                        },
                        "E3_Fiscal measures": {
                            "type": "integer"
                        },
                        "E4_International support": {
                            "type": "integer"
                        },
                        "H1_Public information campaigns": {
                            "type": "integer"
                        },
                        "H1_Flag": {
                            "type": "integer"
                        },
                        "H2_Testing policy": {
                            "type": "integer"
                        },
                        "H3_Contact tracing": {
                            "type": "integer"
                        },
                        "H4_Emergency investment in healthcare": {
                            "type": "integer"
                        },
                        "H5_Investment in vaccines": {
                            "type": "integer"
                        },
                        "H6_Facial Coverings": {
                            "type": "integer"
                        },
                        "H6_Flag": {
                            "type": "integer"
                        },
                        "H7_Vaccination policy": {
                            "type": "integer"
                        },
                        "H7_Flag": {
                            "type": "integer"
                        },
                        "H8_Protection of elderly people": {
                            "type": "integer"
                        },
                        "H8_Flag": {
                            "type": "integer"
                        },
                        "M1_Wildcard": {
                            "type": "integer"
                        },
                        "StringencyIndex": {
                            "type": "integer"
                        },
                        "StringencyIndexForDisplay": {
                            "type": "integer"
                        },
                        "StringencyLegacyIndex": {
                            "type": "integer"
                        },
                        "StringencyLegacyIndexForDisplay": {
                            "type": "integer"
                        },
                        "GovernmentResponseIndex": {
                            "type": "integer"
                        },
                        "GovernmentResponseIndexForDisplay": {
                            "type": "integer"
                        },
                        "ContainmentHealthIndex": {
                            "type": "integer"
                        },
                        "ContainmentHealthIndexForDisplay": {
                            "type": "integer"
                        },
                        "EconomicSupportIndex": {
                            "type": "integer"
                        },
                        "EconomicSupportIndexForDisplay": {
                            "type": "integer"
                        }
                    }
                },
                "typeProperties": {
                    "collectionName": "covidpolicy"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTable1')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "Country",
                        "type": "varchar"
                    },
                    {
                        "name": "CountryCode",
                        "type": "varchar"
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Country"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTable3')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "DateKey",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FullDate",
                        "type": "date"
                    },
                    {
                        "name": "isWeekDay",
                        "type": "bit"
                    },
                    {
                        "name": "DayOfWeek",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DayOfMonth",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DayOfQuarter",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DayOfYear",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "DayName",
                        "type": "varchar"
                    },
                    {
                        "name": "WeekOfYear",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "WeekName",
                        "type": "varchar"
                    },
                    {
                        "name": "MonthOfYear",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "MonthName",
                        "type": "varchar"
                    },
                    {
                        "name": "CalendarQuarter",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "CalendarQuarterName",
                        "type": "varchar"
                    },
                    {
                        "name": "CalendarYear",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FiscalMonth",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FiscalMonthName",
                        "type": "varchar"
                    },
                    {
                        "name": "FiscalQuarter",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "FiscalQuarterName",
                        "type": "varchar"
                    },
                    {
                        "name": "FiscalYear",
                        "type": "int",
                        "precision": 10
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Dates"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/SqlServerTable2')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "SqlServer1",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "SqlServerTable",
                "schema": [
                    {
                        "name": "ID",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Updated",
                        "type": "date"
                    },
                    {
                        "name": "Confirmed",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Confirmed_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Deaths",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Deaths_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Recovered",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Recovered_Change",
                        "type": "int",
                        "precision": 10
                    },
                    {
                        "name": "Latitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "Longitude",
                        "type": "decimal",
                        "precision": 10,
                        "scale": 5
                    },
                    {
                        "name": "ISO2",
                        "type": "varchar"
                    },
                    {
                        "name": "ISO3",
                        "type": "varchar"
                    },
                    {
                        "name": "Country_Region",
                        "type": "varchar"
                    },
                    {
                        "name": "load_time",
                        "type": "datetime",
                        "precision": 23,
                        "scale": 3
                    }
                ],
                "typeProperties": {
                    "schema": "dbo",
                    "table": "Covid19_Metrics"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/sqldb_pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureSqlTable1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "sqldb_country_parquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Copy data2",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureSqlTable1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "sqldb_metrics_parquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Copy data3",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "AzureSqlTable1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "sqldb_dates_parquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-05T20:48:42Z"
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/policy_dataflow')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "cosmos_policy_parquet_copy1",
                                "type": "DatasetReference"
                            },
                            "name": "policydatasource"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "policy_parquet",
                                "type": "DatasetReference"
                            },
                            "name": "policysink"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "select1"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          CountryName as string,",
                        "          CountryCode as string,",
                        "          RegionName as string,",
                        "          RegionCode as string,",
                        "          Jurisdiction as string,",
                        "          Date as timestamp,",
                        "          C1_SchoolClosing as double,",
                        "          C1_Flag as boolean,",
                        "          C2_WorkplaceClosing as double,",
                        "          C2_Flag as boolean,",
                        "          C3_CancelPublicEvents as double,",
                        "          C3_Flag as boolean,",
                        "          C4_RestrictionsOnGatherings as double,",
                        "          C4_Flag as boolean,",
                        "          C5_ClosePublicTransport as double,",
                        "          C5_Flag as boolean,",
                        "          C6_StayAtHomeRequirements as double,",
                        "          C6_Flag as boolean,",
                        "          C7_RestrictionsOnInternalMovement as double,",
                        "          C7_Flag as boolean,",
                        "          C8_InternationalTravelControls as double,",
                        "          E1_IncomeSupport as double,",
                        "          E1_Flag as boolean,",
                        "          E2_DebtContractRelief as double,",
                        "          E3_FiscalMeasures as double,",
                        "          E4_InternationalSupport as double,",
                        "          H1_PublicInformationCampaigns as double,",
                        "          H1_Flag as boolean,",
                        "          H2_TestingPolicy as double,",
                        "          H3_ContactTracing as double,",
                        "          H4_EmergencyInvestmentInHealthcare as double,",
                        "          H5_InvestmentInVaccines as double,",
                        "          H6_FacialCoverings as double,",
                        "          H6_Flag as boolean,",
                        "          H7_VaccinationPolicy as double,",
                        "          H7_Flag as boolean,",
                        "          H8_ProtectionOfElderlyPeople as double,",
                        "          H8_Flag as boolean,",
                        "          M1_Wildcard as double,",
                        "          StringencyIndex as double,",
                        "          StringencyIndexForDisplay as double,",
                        "          StringencyLegacyIndex as double,",
                        "          StringencyLegacyIndexForDisplay as double,",
                        "          GovernmentResponseIndex as double,",
                        "          GovernmentResponseIndexForDisplay as double,",
                        "          ContainmentHealthIndex as double,",
                        "          ContainmentHealthIndexForDisplay as double,",
                        "          EconomicSupportIndex as double,",
                        "          EconomicSupportIndexForDisplay as double,",
                        "          id as string,",
                        "          rid as string,",
                        "          self as string,",
                        "          etag as string,",
                        "          attachments as string,",
                        "          ts as string",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> policydatasource",
                        "policydatasource select(mapColumn(",
                        "          CountryCode,",
                        "          Jurisdiction,",
                        "          Date,",
                        "          C1_SchoolClosing,",
                        "          C1_Flag,",
                        "          C2_WorkplaceClosing,",
                        "          C2_Flag,",
                        "          C3_CancelPublicEvents,",
                        "          C3_Flag,",
                        "          C4_RestrictionsOnGatherings,",
                        "          C4_Flag,",
                        "          C5_ClosePublicTransport,",
                        "          C5_Flag,",
                        "          C6_StayAtHomeRequirements,",
                        "          C6_Flag,",
                        "          C7_RestrictionsOnInternalMovement,",
                        "          C7_Flag,",
                        "          C8_InternationalTravelControls,",
                        "          E1_IncomeSupport,",
                        "          E1_Flag,",
                        "          E2_DebtContractRelief,",
                        "          E3_FiscalMeasures,",
                        "          E4_InternationalSupport,",
                        "          H1_PublicInformationCampaigns,",
                        "          H1_Flag,",
                        "          H2_TestingPolicy,",
                        "          H3_ContactTracing,",
                        "          H4_EmergencyInvestmentInHealthcare,",
                        "          H5_InvestmentInVaccines,",
                        "          H6_FacialCoverings,",
                        "          H6_Flag,",
                        "          H7_VaccinationPolicy,",
                        "          H7_Flag,",
                        "          H8_ProtectionOfElderlyPeople,",
                        "          H8_Flag,",
                        "          M1_Wildcard,",
                        "          StringencyIndex,",
                        "          StringencyIndexForDisplay,",
                        "          StringencyLegacyIndex,",
                        "          StringencyLegacyIndexForDisplay,",
                        "          GovernmentResponseIndex,",
                        "          GovernmentResponseIndexForDisplay,",
                        "          ContainmentHealthIndex,",
                        "          ContainmentHealthIndexForDisplay,",
                        "          EconomicSupportIndex,",
                        "          EconomicSupportIndexForDisplay,",
                        "          id,",
                        "          rid,",
                        "          self,",
                        "          etag,",
                        "          attachments,",
                        "          ts",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> select1",
                        "select1 sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     partitionFileNames:['Policies.parquet'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> policysink"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/cosmos_policy_parquet_copy1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/covid19metrics_dataflow')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "sqldb_metrics_parquet",
                                "type": "DatasetReference"
                            },
                            "name": "sqldbcovid19metricsdataflow"
                        },
                        {
                            "dataset": {
                                "referenceName": "df_metrics_parquet_copy1",
                                "type": "DatasetReference"
                            },
                            "name": "dfcovid19metricsdataflow"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "deaths_parquet",
                                "type": "DatasetReference"
                            },
                            "name": "sinkdeaths"
                        },
                        {
                            "dataset": {
                                "referenceName": "recoveries_parquet",
                                "type": "DatasetReference"
                            },
                            "name": "sinkrecoveries"
                        },
                        {
                            "dataset": {
                                "referenceName": "cases_parquet",
                                "type": "DatasetReference"
                            },
                            "name": "sinkcases"
                        }
                    ],
                    "transformations": [
                        {
                            "name": "union1"
                        },
                        {
                            "name": "selectdeaths"
                        },
                        {
                            "name": "selectrecoveries"
                        },
                        {
                            "name": "selectcases"
                        }
                    ],
                    "scriptLines": [
                        "source(output(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Deaths as integer,",
                        "          Deaths_Change as integer,",
                        "          Recovered as integer,",
                        "          Recovered_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO2 as string,",
                        "          ISO3 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> sqldbcovid19metricsdataflow",
                        "source(output(",
                        "          ID as integer,",
                        "          Updated as date,",
                        "          Confirmed as integer,",
                        "          Confirmed_Change as integer,",
                        "          Deaths as integer,",
                        "          Deaths_Change as integer,",
                        "          Recovered as integer,",
                        "          Recovered_Change as integer,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5),",
                        "          ISO2 as string,",
                        "          ISO3 as string,",
                        "          Country_Region as string,",
                        "          load_time as timestamp",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> dfcovid19metricsdataflow",
                        "sqldbcovid19metricsdataflow, dfcovid19metricsdataflow union(byName: true,",
                        "     partitionBy('hash', 1))~> union1",
                        "union1 select(mapColumn(",
                        "          ID,",
                        "          Updated,",
                        "          Deaths,",
                        "          Deaths_Change,",
                        "          ISO3",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectdeaths",
                        "union1 select(mapColumn(",
                        "          ID,",
                        "          Updated,",
                        "          Recovered,",
                        "          Recovered_Change,",
                        "          ISO3",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectrecoveries",
                        "union1 select(mapColumn(",
                        "          ID,",
                        "          Updated,",
                        "          Confirmed,",
                        "          Confirmed_Change,",
                        "          ISO3",
                        "     ),",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true) ~> selectcases",
                        "selectdeaths sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     partitionFileNames:['Deaths.parquet'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> sinkdeaths",
                        "selectrecoveries sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     partitionFileNames:['Recoveries.parquet'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> sinkrecoveries",
                        "selectcases sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     partitionFileNames:['Cases.parquet'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> sinkcases"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/df_metrics_parquet_copy1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/dates_dataflow')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "sqldb_dates_parquet_copy1",
                                "type": "DatasetReference"
                            },
                            "name": "sqldbdatessource"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "dates_parquet",
                                "type": "DatasetReference"
                            },
                            "name": "datessink"
                        }
                    ],
                    "transformations": [],
                    "scriptLines": [
                        "source(output(",
                        "          DateKey as integer,",
                        "          FullDate as date,",
                        "          isWeekDay as boolean,",
                        "          DayOfWeek as integer,",
                        "          DayOfMonth as integer,",
                        "          DayOfQuarter as integer,",
                        "          DayOfYear as integer,",
                        "          DayName as string,",
                        "          WeekOfYear as integer,",
                        "          WeekName as string,",
                        "          MonthOfYear as integer,",
                        "          MonthName as string,",
                        "          CalendarQuarter as integer,",
                        "          CalendarQuarterName as string,",
                        "          CalendarYear as integer,",
                        "          FiscalMonth as integer,",
                        "          FiscalMonthName as string,",
                        "          FiscalQuarter as integer,",
                        "          FiscalQuarterName as string,",
                        "          FiscalYear as integer",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> sqldbdatessource",
                        "sqldbdatessource sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     partitionFileNames:['Date.parquet'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> datessink"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/sqldb_dates_parquet_copy1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/countries_dataflow')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "sqldb_country_parquet_copy1",
                                "type": "DatasetReference"
                            },
                            "name": "sqldbcountrydataflow"
                        }
                    ],
                    "sinks": [
                        {
                            "dataset": {
                                "referenceName": "geography_parquet",
                                "type": "DatasetReference"
                            },
                            "name": "countrysink"
                        }
                    ],
                    "transformations": [],
                    "scriptLines": [
                        "source(output(",
                        "          Country as string,",
                        "          CountryCode as string,",
                        "          Latitude as decimal(10,5),",
                        "          Longitude as decimal(10,5)",
                        "     ),",
                        "     allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     ignoreNoFilesFound: false,",
                        "     format: 'parquet') ~> sqldbcountrydataflow",
                        "sqldbcountrydataflow sink(allowSchemaDrift: true,",
                        "     validateSchema: false,",
                        "     format: 'parquet',",
                        "     partitionFileNames:['Geography.parquet'],",
                        "     umask: 0022,",
                        "     preCommands: [],",
                        "     postCommands: [],",
                        "     skipDuplicateMapInputs: true,",
                        "     skipDuplicateMapOutputs: true,",
                        "     partitionBy('hash', 1)) ~> countrysink"
                    ]
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/sqldb_country_parquet_copy1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/cosmos_pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "CosmosDbSqlApiSource",
                                "preferredRegions": []
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "mappings": [
                                    {
                                        "source": {
                                            "path": "$['CountryName']"
                                        },
                                        "sink": {
                                            "name": "CountryName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['CountryCode']"
                                        },
                                        "sink": {
                                            "name": "CountryCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['RegionName']"
                                        },
                                        "sink": {
                                            "name": "RegionName",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['RegionCode']"
                                        },
                                        "sink": {
                                            "name": "RegionCode",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['Jurisdiction']"
                                        },
                                        "sink": {
                                            "name": "Jurisdiction",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['Date']"
                                        },
                                        "sink": {
                                            "name": "Date",
                                            "type": "Date"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C1_School closing']"
                                        },
                                        "sink": {
                                            "name": "C1_SchoolClosing",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C1_Flag']"
                                        },
                                        "sink": {
                                            "name": "C1_Flag",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C2_Workplace closing']"
                                        },
                                        "sink": {
                                            "name": "C2_WorkplaceClosing",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C2_Flag']"
                                        },
                                        "sink": {
                                            "name": "C2_Flag",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C3_Cancel public events']"
                                        },
                                        "sink": {
                                            "name": "C3_CancelPublicEvents",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C3_Flag']"
                                        },
                                        "sink": {
                                            "name": "C3_Flag",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C4_Restrictions on gatherings']"
                                        },
                                        "sink": {
                                            "name": "C4_RestrictionsOnGatherings",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C4_Flag']"
                                        },
                                        "sink": {
                                            "name": "C4_Flag",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C5_Close public transport']"
                                        },
                                        "sink": {
                                            "name": "C5_ClosePublicTransport",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C5_Flag']"
                                        },
                                        "sink": {
                                            "name": "C5_Flag",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C6_Stay at home requirements']"
                                        },
                                        "sink": {
                                            "name": "C6_StayAtHomeRequirements",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C6_Flag']"
                                        },
                                        "sink": {
                                            "name": "C6_Flag",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C7_Restrictions on internal movement']"
                                        },
                                        "sink": {
                                            "name": "C7_RestrictionsOnInternalMovement",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C7_Flag']"
                                        },
                                        "sink": {
                                            "name": "C7_Flag",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['C8_International travel controls']"
                                        },
                                        "sink": {
                                            "name": "C8_InternationalTravelControls",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E1_Income support']"
                                        },
                                        "sink": {
                                            "name": "E1_IncomeSupport",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E1_Flag']"
                                        },
                                        "sink": {
                                            "name": "E1_Flag",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E2_Debt contract relief']"
                                        },
                                        "sink": {
                                            "name": "E2_DebtContractRelief",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E3_Fiscal measures']"
                                        },
                                        "sink": {
                                            "name": "E3_FiscalMeasures",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['E4_International support']"
                                        },
                                        "sink": {
                                            "name": "E4_InternationalSupport",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H1_Public information campaigns']"
                                        },
                                        "sink": {
                                            "name": "H1_PublicInformationCampaigns",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H1_Flag']"
                                        },
                                        "sink": {
                                            "name": "H1_Flag",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H2_Testing policy']"
                                        },
                                        "sink": {
                                            "name": "H2_TestingPolicy",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H3_Contact tracing']"
                                        },
                                        "sink": {
                                            "name": "H3_ContactTracing",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H4_Emergency investment in healthcare']"
                                        },
                                        "sink": {
                                            "name": "H4_EmergencyInvestmentInHealthcare",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H5_Investment in vaccines']"
                                        },
                                        "sink": {
                                            "name": "H5_InvestmentInVaccines",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H6_Facial Coverings']"
                                        },
                                        "sink": {
                                            "name": "H6_FacialCoverings",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H6_Flag']"
                                        },
                                        "sink": {
                                            "name": "H6_Flag",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H7_Vaccination policy']"
                                        },
                                        "sink": {
                                            "name": "H7_VaccinationPolicy",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H7_Flag']"
                                        },
                                        "sink": {
                                            "name": "H7_Flag",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H8_Protection of elderly people']"
                                        },
                                        "sink": {
                                            "name": "H8_ProtectionOfElderlyPeople",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['H8_Flag']"
                                        },
                                        "sink": {
                                            "name": "H8_Flag",
                                            "type": "Boolean"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['M1_Wildcard']"
                                        },
                                        "sink": {
                                            "name": "M1_Wildcard",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['StringencyIndex']"
                                        },
                                        "sink": {
                                            "name": "StringencyIndex",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['StringencyIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "StringencyIndexForDisplay",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['StringencyLegacyIndex']"
                                        },
                                        "sink": {
                                            "name": "StringencyLegacyIndex",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['StringencyLegacyIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "StringencyLegacyIndexForDisplay",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['GovernmentResponseIndex']"
                                        },
                                        "sink": {
                                            "name": "GovernmentResponseIndex",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['GovernmentResponseIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "GovernmentResponseIndexForDisplay",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['ContainmentHealthIndex']"
                                        },
                                        "sink": {
                                            "name": "ContainmentHealthIndex",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['ContainmentHealthIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "ContainmentHealthIndexForDisplay",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['EconomicSupportIndex']"
                                        },
                                        "sink": {
                                            "name": "EconomicSupportIndex",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['EconomicSupportIndexForDisplay']"
                                        },
                                        "sink": {
                                            "name": "EconomicSupportIndexForDisplay",
                                            "type": "Double"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['id']"
                                        },
                                        "sink": {
                                            "name": "id",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_rid']"
                                        },
                                        "sink": {
                                            "name": "rid",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_self']"
                                        },
                                        "sink": {
                                            "name": "self",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_etag']"
                                        },
                                        "sink": {
                                            "name": "etag",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_attachments']"
                                        },
                                        "sink": {
                                            "name": "attachments",
                                            "type": "String"
                                        }
                                    },
                                    {
                                        "source": {
                                            "path": "$['_ts']"
                                        },
                                        "sink": {
                                            "name": "ts",
                                            "type": "String"
                                        }
                                    }
                                ]
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "CosmosDbNoSqlContainer1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "cosmos_policy_parquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-05T20:48:42Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/CosmosDbNoSqlContainer1')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/df_pipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "Copy data1",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SqlServerTable1",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "df_country_parquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Copy data2",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SqlServerTable2",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "df_metrics_parquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    },
                    {
                        "name": "Copy data3",
                        "type": "Copy",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "SqlServerSource",
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "sink": {
                                "type": "ParquetSink",
                                "storeSettings": {
                                    "type": "AzureBlobFSWriteSettings"
                                },
                                "formatSettings": {
                                    "type": "ParquetWriteSettings"
                                }
                            },
                            "enableStaging": false,
                            "translator": {
                                "type": "TabularTranslator",
                                "typeConversion": true,
                                "typeConversionSettings": {
                                    "allowDataTruncation": true,
                                    "treatBooleanAsNumber": false
                                }
                            }
                        },
                        "inputs": [
                            {
                                "referenceName": "SqlServerTable3",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ],
                        "outputs": [
                            {
                                "referenceName": "df_dates_parquet",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        ]
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-05T20:48:42Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/SqlServerTable1')]",
                "[concat(variables('factoryId'), '/datasets/SqlServerTable2')]",
                "[concat(variables('factoryId'), '/datasets/SqlServerTable3')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/challenge2_dataflows')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "covid19metrics_dataflow",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "covid19metrics_dataflow",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "sqldbcovid19metricsdataflow": {},
                                    "dfcovid19metricsdataflow": {},
                                    "sinkdeaths": {},
                                    "sinkrecoveries": {},
                                    "sinkcases": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "policy_dataflow",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "policy_dataflow",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "policydatasource": {},
                                    "policysink": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "dates_dataflow",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "dates_dataflow",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "sqldbdatessource": {},
                                    "datessink": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    },
                    {
                        "name": "countries_dataflow",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "0.12:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "countries_dataflow",
                                "type": "DataFlowReference",
                                "parameters": {},
                                "datasetParameters": {
                                    "sqldbcountrydataflow": {},
                                    "countrysink": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "policy": {
                    "elapsedTimeMetric": {}
                },
                "annotations": [],
                "lastPublishTime": "2024-04-06T23:07:48Z"
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/dataflows/covid19metrics_dataflow')]",
                "[concat(variables('factoryId'), '/dataflows/policy_dataflow')]",
                "[concat(variables('factoryId'), '/dataflows/dates_dataflow')]",
                "[concat(variables('factoryId'), '/dataflows/countries_dataflow')]"
            ]
        }
    ]
}